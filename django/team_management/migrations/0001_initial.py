# Generated by Django 3.1.2 on 2020-10-13 01:25

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContenderPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_name', models.CharField(default='', max_length=50)),
                ('scheduled_start', models.DateTimeField(default=datetime.datetime(2020, 10, 13, 1, 35, 4, 157475, tzinfo=utc))),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('abbreviation', models.CharField(blank=True, default='', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiplier', models.FloatField(default=1)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringTypeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('abbreviation', models.CharField(default='', max_length=8)),
                ('weigh_in', models.BooleanField(default=False)),
                ('safety_check', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.team')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('limit', models.IntegerField(default=0)),
                ('score_change', models.IntegerField()),
                ('extra_data', models.CharField(max_length=10)),
                ('scoring_type_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.scoringtypegroup')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_timestamp', models.DurationField(default=datetime.timedelta(0))),
                ('count', models.IntegerField(default=1)),
                ('Contender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.contender')),
                ('scoring_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.scoringtype')),
            ],
        ),
        migrations.CreateModel(
            name='MatchStateChangeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_type', models.CharField(choices=[('STA', 'Started'), ('PAU', 'Paused'), ('RES', 'Resumed'), ('END', 'End'), ('FIN', 'Finalized')], default='STA', max_length=3)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='ContenderContextChangeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_timestamp', models.DurationField(default=datetime.timedelta(0))),
                ('change', models.CharField(choices=[('ADD', 'Add'), ('REM', 'Remove')], default='ADD', max_length=3)),
                ('contender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.contender')),
                ('scoring_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.scoringcontext')),
            ],
        ),
        migrations.AddField(
            model_name='contender',
            name='contender_position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.contenderposition'),
        ),
        migrations.AddField(
            model_name='contender',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team_management.match'),
        ),
        migrations.AddField(
            model_name='contender',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='team_management.team'),
        ),
    ]
